(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),c=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},b=function(e){var t=c(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=c(n),u=a,O=b["".concat(o,".").concat(u)]||b[u]||d[u]||i;return n?r.a.createElement(O,p(p({ref:t},s),{},{components:n})):r.a.createElement(O,p({ref:t},s))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return p})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(2),r=n(6),i=(n(0),n(104)),o={id:"node-installation",title:"EOSIO Node Installation",sidebar_label:"Node Installation"},p={unversionedId:"node-installation",id:"node-installation",isDocsHomePage:!1,title:"EOSIO Node Installation",description:"EOSIO version tag: v2.0.5",source:"@site/docs/node-installation.md",slug:"/node-installation",permalink:"/docs/node-installation",editUrl:"https://github.com/LatamLink/latamlink.io/tree/master/docs/node-installation.md",version:"current",lastUpdatedAt:1601577643,sidebar_label:"Node Installation",sidebar:"docs",previous:{title:"Entity and Node Information",permalink:"/docs/entity-node-info"},next:{title:"Hello World Contract",permalink:"/docs/hello-world"}},l=[{value:"1. Install EOSIO from precompiled binaries",id:"1-install-eosio-from-precompiled-binaries",children:[{value:"Uninstall Script",id:"uninstall-script",children:[]}]},{value:"2. Configure LatamLink Testnet Node",id:"2-configure-latamlink-testnet-node",children:[{value:"Starting and Stopping Nodeos",id:"starting-and-stopping-nodeos",children:[]}]},{value:"Relevant nodeos configurations",id:"relevant-nodeos-configurations",children:[{value:"Validator",id:"validator",children:[]},{value:"Validator p2p layer 1",id:"validator-p2p-layer-1",children:[]},{value:"Validator p2p out",id:"validator-p2p-out",children:[]},{value:"Validator p2p bidir",id:"validator-p2p-bidir",children:[]},{value:"boot p2p out",id:"boot-p2p-out",children:[]},{value:"boot p2p bidir",id:"boot-p2p-bidir",children:[]},{value:"writer p2p",id:"writer-p2p",children:[]},{value:"writer api",id:"writer-api",children:[]},{value:"observer api",id:"observer-api",children:[]},{value:"observer p2p",id:"observer-p2p",children:[]}]}],s={rightToc:l};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"EOSIO version tag: ",Object(i.b)("inlineCode",{parentName:"p"},"v2.0.5")," "),Object(i.b)("p",null,"Chain ID: ",Object(i.b)("inlineCode",{parentName:"p"},"2c1f36d2e3774cba3e47804b6463c207544ac24183194e0b96ffad31e8f4acd5")),Object(i.b)("p",null,"Genesis File: ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://raw.githubusercontent.com/LatamLink/eosio-testnet/master/genesis.json"}),Object(i.b)("inlineCode",{parentName:"a"},"genesis.json"))),Object(i.b)("h2",{id:"1-install-eosio-from-precompiled-binaries"},"1. Install EOSIO from precompiled binaries"),Object(i.b)("p",null,"Download the latest version of EOSIO for your OS from:  ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/EOSIO/eos/releases/tag/v2.0.5"}),"https://github.com/EOSIO/eos/releases/tag/v2.0.5"),"   "),Object(i.b)("p",null,"For example, for ubuntu 18.04 you need to download ",Object(i.b)("inlineCode",{parentName:"p"},"eosio_2.0.5-1-ubuntu-18.04_amd64.deb"),"  "),Object(i.b)("p",null,"You can use apt to install it:  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"wget https://github.com/eosio/eos/releases/download/v2.0.5/eosio_2.0.5-1-ubuntu-18.04_amd64.deb\nsudo apt install ./eosio_2.0.5-1-ubuntu-18.04_amd64.deb\n")),Object(i.b)("p",null,"It will download all dependencies and install EOSIO to ",Object(i.b)("inlineCode",{parentName:"p"},"/usr/opt/eosio/v2.0.5"),"  "),Object(i.b)("h3",{id:"uninstall-script"},"Uninstall Script"),Object(i.b)("p",null,"To uninstall the EOSIO built/installed binaries and dependencies, run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./scripts/eosio_uninstall.sh\n")),Object(i.b)("h2",{id:"2-configure-latamlink-testnet-node"},"2. Configure LatamLink Testnet Node"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"mkdir ~/LatamLink-testnet\ncd ~/LatamLink-testnet\ngit clone https://github.com/LatamLink/testnet.git ./\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Edit ",Object(i.b)("inlineCode",{parentName:"p"},"config.ini"),"   "),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Enter your server's external address: ",Object(i.b)("inlineCode",{parentName:"li"},"p2p-server-address = YOUR_DOMAIN_OR_IP:9876")," "))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Open TCP Ports (8888, 9876) on your firewall/router  "))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Specify a genesis.json file the first time you run nodeos"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"./start.sh --delete-all-blocks --genesis-json genesis.json\n")),Object(i.b)("p",null,"Follow logs to check your node is running OK. "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"tail -f stderr.txt\n")),Object(i.b)("p",null,"Check if you can access your node using link ",Object(i.b)("inlineCode",{parentName:"p"},"http://**YOUR_SERVER**/v1/chain/get_info")," "),Object(i.b)("p",null,"Here is an ",Object(i.b)("a",{href:"https://latamlink.eosio.cr/v1/chain/get_info",target:"_blank"},"API Example"),"  "),Object(i.b)("h3",{id:"starting-and-stopping-nodeos"},"Starting and Stopping Nodeos"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"./start.sh")," Starts and restarts Nodeos service.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"./stop.sh")," Performs graceful shutdown of Nodeos service."))),Object(i.b)("h2",{id:"relevant-nodeos-configurations"},"Relevant nodeos configurations"),Object(i.b)("p",null,"This is not a list of configurations that can be used out of the box, rather a list of important options for each type of node."),Object(i.b)("h3",{id:"validator"},"Validator"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"\nproducer-name = <validator_name>\n\nsignature-provider = EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV=KEY:5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3\n\npeer-key =\npeer-private-key =\n\neosio::producer_plugin\n\n")),Object(i.b)("h3",{id:"validator-p2p-layer-1"},"Validator p2p layer 1"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"peer-key =\npeer-private-key =\np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")),Object(i.b)("h3",{id:"validator-p2p-out"},"Validator p2p out"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"p2p-accept-transactions = false\napi-accept-transactions = false\n\npeer-key =\npeer-private-key = \np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")),Object(i.b)("h3",{id:"validator-p2p-bidir"},"Validator p2p bidir"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"peer-key =\npeer-private-key =\np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")),Object(i.b)("h3",{id:"boot-p2p-out"},"boot p2p out"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"p2p-accept-transactions = false\napi-accept-transactions = false\n\npeer-key =\npeer-private-key =\np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")),Object(i.b)("h3",{id:"boot-p2p-bidir"},"boot p2p bidir"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"peer-key =\npeer-private-key =\np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")),Object(i.b)("h3",{id:"writer-p2p"},"writer p2p"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"peer-key =\npeer-private-key =\np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")),Object(i.b)("h3",{id:"writer-api"},"writer api"),Object(i.b)("p",null,"Please see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.dfuse.io/en"}),"dfuse documentation")),Object(i.b)("h3",{id:"observer-api"},"observer api"),Object(i.b)("p",null,"Please see ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.dfuse.io/en"}),"dfuse documentation")),Object(i.b)("h3",{id:"observer-p2p"},"observer p2p"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash",metastring:'title="config.ini"',title:'"config.ini"'}),"p2p-accept-transactions = false\napi-accept-transactions = false\n\npeer-key =\npeer-private-key =\np2p-listen-endpoint =\np2p-server-address =\np2p-peer-address =\np2p-max-nodes-per-host =\nmax-clients =\nnet-threads =\n\neosio::net_plugin\n")))}c.isMDXComponent=!0}}]);