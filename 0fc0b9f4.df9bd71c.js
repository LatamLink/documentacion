(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{105:function(e,i,r){"use strict";r.d(i,"a",(function(){return d})),r.d(i,"b",(function(){return f}));var t=r(0),o=r.n(t);function a(e,i,r){return i in e?Object.defineProperty(e,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[i]=r,e}function n(e,i){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?n(Object(r),!0).forEach((function(i){a(e,i,r[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(r,i))}))}return e}function c(e,i){if(null==e)return{};var r,t,o=function(e,i){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],i.indexOf(r)>=0||(o[r]=e[r]);return o}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],i.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),p=function(e){var i=o.a.useContext(l),r=i;return e&&(r="function"==typeof e?e(i):s(s({},i),e)),r},d=function(e){var i=p(e.components);return o.a.createElement(l.Provider,{value:i},e.children)},b={inlineCode:"code",wrapper:function(e){var i=e.children;return o.a.createElement(o.a.Fragment,{},i)}},u=o.a.forwardRef((function(e,i){var r=e.components,t=e.mdxType,a=e.originalType,n=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(r),u=t,f=d["".concat(n,".").concat(u)]||d[u]||b[u]||a;return r?o.a.createElement(f,s(s({ref:i},l),{},{components:r})):o.a.createElement(f,s({ref:i},l))}));function f(e,i){var r=arguments,t=i&&i.mdxType;if("string"==typeof e||t){var a=r.length,n=new Array(a);n[0]=u;var s={};for(var c in i)hasOwnProperty.call(i,c)&&(s[c]=i[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,n[1]=s;for(var l=2;l<a;l++)n[l]=r[l];return o.a.createElement.apply(null,n)}return o.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},56:function(e,i,r){"use strict";r.r(i),r.d(i,"frontMatter",(function(){return n})),r.d(i,"metadata",(function(){return s})),r.d(i,"rightToc",(function(){return c})),r.d(i,"default",(function(){return p}));var t=r(2),o=r(6),a=(r(0),r(105)),n={id:"sdk-libraries",title:"EOSIO SDK Libraries",sidebar_label:"EOSIO SDK Libraries"},s={unversionedId:"sdk-libraries",id:"sdk-libraries",isDocsHomePage:!1,title:"EOSIO SDK Libraries",description:"APIs for integrating with EOSIO blockchains",source:"@site/docs/sdk-libraries.md",slug:"/sdk-libraries",permalink:"/docs/sdk-libraries",editUrl:"https://github.com/LatamLink/latamlink.io/tree/master/docs/sdk-libraries.md",version:"current",lastUpdatedAt:1600018962,sidebar_label:"EOSIO SDK Libraries",sidebar:"docs",previous:{title:"Network Governance Tool",permalink:"/docs/network-governance"},next:{title:"Snapshots and Backups",permalink:"/docs/backups"}},c=[{value:"JavaScript",id:"javascript",children:[{value:"eosjs",id:"eosjs",children:[]},{value:"eosjs-keygen",id:"eosjs-keygen",children:[]}]},{value:"Swift SDK",id:"swift-sdk",children:[{value:"eosio-swift",id:"eosio-swift",children:[]},{value:"eosio-swift-abieos-serialization-provider",id:"eosio-swift-abieos-serialization-provider",children:[]},{value:"eosio-swift-ecc",id:"eosio-swift-ecc",children:[]},{value:"eosio-swift-reference-ios-authenticator-signature-provider",id:"eosio-swift-reference-ios-authenticator-signature-provider",children:[]},{value:"eosio-swift-softkey-signature-provider",id:"eosio-swift-softkey-signature-provider",children:[]},{value:"eosio-swift-vault-signature-provider",id:"eosio-swift-vault-signature-provider",children:[]},{value:"eosio-swift-vault",id:"eosio-swift-vault",children:[]}]},{value:"Java SDK",id:"java-sdk",children:[{value:"eosio-java-android-abieos-serialization-provider",id:"eosio-java-android-abieos-serialization-provider",children:[]},{value:"eosio-java-android-rpc-provider",id:"eosio-java-android-rpc-provider",children:[]},{value:"eosio-java-softkey-signature-provider",id:"eosio-java-softkey-signature-provider",children:[]},{value:"eosio-android-keystore-signature-provider",id:"eosio-android-keystore-signature-provider",children:[]}]}],l={rightToc:c};function p(e){var i=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},l,r,{components:i,mdxType:"MDXLayout"}),Object(a.b)("p",null,"APIs for integrating with EOSIO blockchains "),Object(a.b)("h2",{id:"javascript"},"JavaScript"),Object(a.b)("p",null,"EOSJS is a JavaScript library for the integration with EOSIO based blockchains using EOSIO's RPC API. This library was created to provide a JavaScript interface for the interaction between web applications for the final user and EOSIO blockchains. As this develops a significant amount of applications in JavaScript, this library is designed to provide a higher support to the ecosystem in general and establishes the better practices in the industry for the interaction of the web applications with EOSIO blockchains."),Object(a.b)("h3",{id:"eosjs"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://developers.eos.io/manuals/eosjs/latest/index"}),"eosjs")),Object(a.b)("p",null,"A general purpose Javascript library which provides an API for integrating with EOSIO-based blockchains using the EOSIO Nodeos RPC API"),Object(a.b)("h3",{id:"eosjs-keygen"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosjs-keygen"}),"eosjs-keygen")),Object(a.b)("p",null,"A Javascript library for managing keys in local storage"),Object(a.b)("h2",{id:"swift-sdk"},"Swift SDK"),Object(a.b)("h3",{id:"eosio-swift"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift"}),"eosio-swift")),Object(a.b)("p",null,"An API for integrating with EOSIO-based blockchains using the EOSIO RPC API"),Object(a.b)("h3",{id:"eosio-swift-abieos-serialization-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-abieos-serialization-provider"}),"eosio-swift-abieos-serialization-provider")),Object(a.b)("p",null,"A pluggable serialization provider for EOSIO SDK for Swift."),Object(a.b)("h3",{id:"eosio-swift-ecc"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-ecc"}),"eosio-swift-ecc")),Object(a.b)("p",null,"A library for working with public and private keys, cryptographic signatures, encryption/decryption, etc. as part of the EOSIO SDK for Swift family of libraries"),Object(a.b)("h3",{id:"eosio-swift-reference-ios-authenticator-signature-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-reference-ios-authenticator-signature-provider"}),"eosio-swift-reference-ios-authenticator-signature-provider")),Object(a.b)("p",null,"A pluggable signature provider for EOSIO SDK for Swift"),Object(a.b)("h3",{id:"eosio-swift-softkey-signature-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-softkey-signature-provider"}),"eosio-swift-softkey-signature-provider")),Object(a.b)("p",null,"An example pluggable signature provider for EOSIO SDK for Swift. It allows for signing transactions using in-memory K1 keys"),Object(a.b)("h3",{id:"eosio-swift-vault-signature-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-vault-signature-provider"}),"eosio-swift-vault-signature-provider")),Object(a.b)("p",null,"A pluggable signature provider for EOSIO SDK for Swift"),Object(a.b)("h3",{id:"eosio-swift-vault"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-swift-vault"}),"eosio-swift-vault")),Object(a.b)("p",null,"An utility library for working with public/private keys and signing with Apple's Keychain and Secure Enclave"),Object(a.b)("h2",{id:"java-sdk"},"Java SDK"),Object(a.b)("h3",{id:"eosio-java-android-abieos-serialization-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-java-android-abieos-serialization-provider"}),"eosio-java-android-abieos-serialization-provider")),Object(a.b)("p",null,"A pluggable serialization provider for EOSIO SDK for Java"),Object(a.b)("h3",{id:"eosio-java-android-rpc-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-java-android-rpc-provider"}),"eosio-java-android-rpc-provider")),Object(a.b)("p",null,"An Android RPC provider implementation for use within EOSIO SDK for Java as a plugin."),Object(a.b)("h3",{id:"eosio-java-softkey-signature-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-java-softkey-signature-provider"}),"eosio-java-softkey-signature-provider")),Object(a.b)("p",null,"An example pluggable signature provider for EOSIO SDK for Java"),Object(a.b)("h3",{id:"eosio-android-keystore-signature-provider"},Object(a.b)("a",Object(t.a)({parentName:"h3"},{href:"https://github.com/EOSIO/eosio-android-keystore-signature-provider"}),"eosio-android-keystore-signature-provider")),Object(a.b)("p",null,"An example pluggable signature provider for EOSIO SDK for Java written in Kotlin"))}p.isMDXComponent=!0}}]);